#!/bin/bash

#        _     __      _       _     
#  __  _| | __/ _| ___| |_ ___| |__  
#  \ \/ / |/ / |_ / _ \ __/ __| '_ \ 
#   >  <|   <|  _|  __/ || (__| | | |
#  /_/\_\_|\_\_|  \___|\__\___|_| |_|
#
#  written by thomas berryhill <tb01110100@gmail.com>
#  modified by thiago almeida <thiagoalmeidasa@gmail.com>
#  under the mit license


type feh >/dev/null 2>&1 || { echo >&2 "this script requires feh"; exit 1; }
type curl >/dev/null 2>&1 || { echo >&2 "this script requires curl"; exit 1; }
type bc >/dev/null 2>&1 || { echo >&2 "this script requires bc"; exit 1; }
[[ -d ~/xkfetch ]] || mkdir ~/xkfetch

doc() {
  echo
  echo "xkfetch 0.7.2"
  echo "modified by thiagoalmeidasa"
  echo
  echo "usage: xkfetch [options...]"
  echo
  echo "  -t		fetch and display today's xkcd and titletext"
  echo "  -n <number>	fetch a specific xkcd and display titletext"
  echo "  -r		fetch a random xkcd"
  echo "  -m <number>	fetch a random xkcd every <number> minutes."
  echo "  -d		disable titletext printing"
  echo "  -s		save a fetched xkcd. xkcds are saved to ~/xkfetch"
  echo "  -h		display this message"
  echo
}

setvars(){
  data=$(curl -s http://xkcd.com/$xkcdnum/ | grep "imgs.xkcd.com/comics" | head -n 1)
  linkpart=$(echo $data | awk '{ print $2 }')
  xkcdurl="http:${linkpart:5:-1}"
  echo $xkcdurl
  xkcdtitle1=${xkcdurl:28:-4}
  titlepart=$(curl -s http://xkcd.com/$xkcdnum/ | grep "id=\"ctitle\"")
  xkcdtitle2=${titlepart:17:-6}
  titletext=$(echo ${data:$(( ${#xkcdurl} + 19 )):-$(( ${#xkcdtitle1} + 11 ))} | sed 's/&#39;/'\''/g')
}

specialcheck() {
  if [[ "$?" != "0" ]]; then
    echo "This appears to be a special/interactive comic."
    echo "Here's a link to open it in your browser:"
    echo "https://xkcd.com/$xkcdnum"
    exit
  fi
}

fetch() {
  setvars
  if [[ -z $(ls ~/xkfetch | grep "$xkcdnum-") ]]; then
    curl -s -o ~/xkfetch/"$xkcdnum-$xkcdtitle2".png $xkcdurl > /dev/null 2>&1
    specialcheck
    echo "xkcd #$xkcdnum - $xkcdtitle2"
    [[ $title != "1" ]] && echo "$titletext"
    feh ~/xkfetch/"$xkcdnum-$xkcdtitle2".png > /dev/null 2>&1 &
    sleep 2
    [[ $save != "1" ]] && rm ~/xkfetch/"$xkcdnum-$xkcdtitle1".png
  else
    echo "this xkcd has already been saved"
    echo "xkcd #$xkcdnum - $xkcdtitle2"
    [[ $title != "1" ]] && echo "$titletext"
    feh ~/xkfetch/"$xkcdnum-$xkcdtitle1".png &
  fi
}

today() {
  numpart=$(curl -s http://xkcd.com/ | grep Permanent)
  xkcdnum=${numpart:46:-7}
  fetch
}

random() {
  numpart=$(curl -s http://xkcd.com/ | grep Permanent)
  todaynum=${numpart:46:-7}
  xkcdnum=$(shuf -i 0-$todaynum -n 1)
  fetch
}

randomtimed() {
  while :
  do
    random
    sleep $(bc -l <<< "$minutes * 60")
    kill $!
    echo
  done
}

while getopts ":tn:rm:dsh" opt; do
  case $opt in
    t)
      today=1;;
    n)
      xkcdnum=$OPTARG;;
    r)
      random=1;;
    m)
      minutes=$OPTARG;;
    d)
      title=1;;
    s)
      save=1;;
    h)
      help=1;;
    \?)
      echo "invalid option: -$OPTARG" >&2; exit 1;;
    :)
      echo "option -$OPTARG requires an argument" >&2; exit 1;;
  esac
done

if [[ $help = "1" ]]; then doc; exit; fi
if [[ $today = "1" ]]; then today; exit; fi
if [[ $random = "1" ]]; then random; exit; fi
if [[ -n $minutes ]]; then randomtimed; exit; fi
if [[ -n $xkcdnum ]]; then fetch; exit; fi

doc
